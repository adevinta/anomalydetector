import pandas as pd
from anomalywatchdog.utils.kruskal_test_seasonality \
    import kruskal_test_seasonality



def test_kruskal_test_seasonality():
    # -- Initialize input checker
    kruskal_value =  kruskal_test_seasonality(
        df=input_df_value(),
        column_period="date",
        column_value="value"
    )
    # -- Check df and columns
    pd.testing.assert_frame_equal(
        pd.DataFrame([kruskal_value]),
        pd.DataFrame([True])
    )

def input_df_value():
    date_list = [
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2021",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2022",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023",
        "2023"
    ]
    value_list = [
        5830302.908,
        7400457.853,
        7449702.162,
        6480787.829,
        6995587.495,
        1675807.097,
        8372644.865,
        11324372.84,
        1799333.476,
        12702195.21,
        4509435.271,
        13316086.92,
        12826666.4,
        15473684.6,
        14899404.32,
        12463053.52,
        12991805.35,
        3016452.775,
        14652128.51,
        19318047.79,
        2998889.127,
        20724634.3,
        7215096.433,
        20925279.44,
        19823029.89,
        23546911.35,
        22349106.49,
        18445319.21,
        18988023.2,
        4357098.453,
        20931612.16,
        27311722.74,
        4198444.778,
        28747073.38,
        9920757.596,
        28534471.96,
    ]
    return pd.DataFrame(
        {'date': pd.to_datetime(date_list), 'value': value_list}
    )

def expected_df():
    sin_1_1_list = [
         0.000000e+00,
        -2.449294e-16,
        -4.898587e-16,
        -7.347881e-16,
        -9.797174e-16,
        -1.224647e-15,
        -1.469576e-15,
        -1.714506e-15,
        -1.959435e-15,
        -2.204364e-15,
        -2.449294e-15,
        -9.799650e-15,
        -2.939152e-15,
         3.921346e-15,
        -3.429011e-15,
        -1.077937e-14,
        -3.918870e-15,
         2.941628e-15,
        -4.408728e-15,
        -1.175909e-14,
        -4.898587e-15,
         1.961911e-15,
        -1.959930e-14,
        -1.273880e-14,
        -5.878305e-15,
         9.821934e-16,
         7.842691e-15,
        -1.371852e-14,
        -6.858022e-15,
         2.475923e-18,
        -2.155874e-14,
        -1.469824e-14,
        -7.837740e-15,
        -9.772415e-16,
         5.883256e-15,
        -1.567795e-14,
    ]
    cos_1_1_list = [
        1.0 +i*0 for i in range(len(sin_1_1_list))
    ]
    return pd.DataFrame(
        {'sin_1_1': sin_1_1_list, 'cos_1_1': cos_1_1_list}
    )



